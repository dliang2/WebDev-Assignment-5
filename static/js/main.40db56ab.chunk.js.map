{"version":3,"sources":["components/City.jsx","App.js","index.js"],"names":["City","State","Lat","Long","EstimatedPopulation","TotalWages","className","App","useState","zipCode","setZipCode","cities","setCities","useEffect","a","linkToAPI","axios","get","response","data","console","log","status","handleSearch","id","placeholder","type","onChange","e","target","value","map","city","RecordNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAEaA,EAAO,YAAkE,IAA/DA,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,IAAKC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,oBAAqBC,EAAiB,EAAjBA,WAChE,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,uCAAUN,EAAV,SAEF,qBAAKM,UAAU,YAAf,SACE,+BACE,yCAAYL,KACZ,4CAAeC,EAAf,KAAsBC,KACtB,wDAA2BC,KAC3B,gDAAmBC,cC4ChBE,G,MApDH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEYF,mBAAS,IAFrB,mBAETG,EAFS,KAEDC,EAFC,KAIhBC,qBAAU,YACU,uCAAG,8BAAAC,EAAA,yDACD,KAAZL,EADa,wDAEbM,EAAY,yCAA2CN,EAF1C,kBAKMO,IAAMC,IAAIF,GALhB,OAKXG,EALW,OAMfN,EAAUM,EAASC,MANJ,kDAQX,KAAMD,WACRE,QAAQC,IAAI,KAAMH,SAASC,MAC3BC,QAAQC,IAAI,KAAMH,SAASI,SAVd,0DAAH,qDAchBC,KACC,CAACd,IAcN,OACE,sBAAKe,GAAG,kBAAR,UACE,qBAAKA,GAAG,SAAR,SACE,qBAAKA,GAAG,cAAR,SACE,qDAGF,sBAAKA,GAAG,aAAR,UACE,mDAGA,uBAAOlB,UAAU,mBAAmBmB,YAAY,mBAAmBC,KAAK,OAAOC,SAjBhE,SAACC,GAGpBlB,EAAWkB,EAAEC,OAAOC,aARbnB,EAAOoB,KAAI,SAACC,GACjB,OAAO,cAAC,EAAD,eAAkCA,GAAvBA,EAAKC,sBCxB/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.40db56ab.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const City = ({ City, State, Lat, Long, EstimatedPopulation, TotalWages }) => {\r\n    return (\r\n      <div className=\"info-card\">\r\n        <div className=\"card-header\">\r\n          <strong> {City} </strong>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <ul>\r\n            <li>State: {State}</li>\r\n            <li>Location: {Lat}, {Long}</li>\r\n            <li>Estimated Population: {EstimatedPopulation}</li>\r\n            <li>Total Wages: ${TotalWages}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { City } from \"./components/City\"\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n  const [cities, setCities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const handleSearch = async () => {\r\n        if (zipCode === \"\") return;\r\n        let linkToAPI = \"https://ctp-zip-api.herokuapp.com/zip/\" + zipCode;\r\n\r\n        try {\r\n          let response = await axios.get(linkToAPI);\r\n          setCities(response.data);\r\n        } catch (error) {\r\n          if (error.response) {\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n          }\r\n        }\r\n      };\r\n      handleSearch();\r\n    }, [zipCode]);\r\n\r\n    const generateCities = () => {\r\n      return cities.map((city) => {\r\n        return <City key={city.RecordNumber} {...city} />;\r\n      });\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n      // TODO: if input is not valid, print no results\r\n      //       reset the output if the input is changed after a successful search\r\n      setZipCode(e.target.value)\r\n    }\r\n\r\n  return (\r\n    <div id=\"content-wrapper\">\r\n      <div id=\"header\">\r\n        <div id=\"header-text\">\r\n          <h1>Zip Code Search</h1>\r\n        </div>\r\n      </div>\r\n        <div id=\"search-box\">\r\n          <label>\r\n            Enter Zipcode: \r\n          </label>\r\n          <input className=\"search-box-field\" placeholder=\"Enter a zipcode!\" type=\"text\" onChange={handleChange} />\r\n      </div>\r\n      {generateCities()}\r\n    </div>\r\n);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}